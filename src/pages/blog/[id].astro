---
import { getCollection, type CollectionEntry } from 'astro:content';
import BlogPost from '@components/blog/BlogPost.astro';
import BaseLayout from '@layouts/BaseLayout.astro';
import { sortPostsByDate } from '@/utils/collections';

export async function getStaticPaths() {
  const allPosts: CollectionEntry<'blog'>[] = await getCollection(
    'blog',
    ({ data }: CollectionEntry<'blog'>) => {
      return !data.draft;
    }
  );
  const sortedPosts = sortPostsByDate(allPosts);

  return sortedPosts.map((post, index) => {
    const postId = post.id.replace('/blog/', '');
    const nextPost = sortedPosts[index + 1];
    const prevPost = sortedPosts[index - 1];
    return {
      params: { id: postId },
      props: { post, nextPost, prevPost }
    };
  });
}

const { post, nextPost, prevPost } = Astro.props;
const canonicalURL = new URL(post.id, Astro.site);
---

<BaseLayout
  title={post.data.title}
  description={post.data.description}
  type="article"
  image={post.data.heroImage}
  publishDate={post.data.pubDate}
  modifiedDate={post.data.updatedDate}
  author={post.data.author}
  next={nextPost ? `/${nextPost.id}` : undefined}
  prev={prevPost ? `/${prevPost.id}` : undefined}
  canonicalURL={canonicalURL}
>
  <article class="mx-auto max-w-4xl px-4 py-8">
    <BlogPost post={post} prevPost={prevPost} nextPost={nextPost}>
      <slot />
    </BlogPost>
  </article>
</BaseLayout>
